@model ChangePassword
@{ 
    SetTitle(Localizer["Byt_lösenord"].ToString()); 
}
<div id="login" class="std-panel">
    <div class="header cf">
        <h1>@Localizer["Byt_lösenord"]</h1>
    </div>
    <div class="body std-form lb-validate-form">
        @using (Html.Post())
        {
        if (TempData["Message"].IsNotNull())
        {
        <div class="success-msg">
            <p>@TempData["Message"]</p>
        </div>
        }
        @Html.Alert(new { @class = "success-msg" })
        @Html.FormGroup(x => x.CurrentPassword, "text").Label().Password().Validate().Build()
        @Html.FormGroup(x => x.NewPassword, "text").Label().Password().Validate().Build()
        @Html.FormGroup(x => x.ConfirmPassword, "text").Label().Password().Validate().Build()
        @Html.Submit(Localizer["Ändra"].ToString())
        }
    </div>
</div>
<script type="text/javascript">
    $('.std-form form').validate({
        'rules': {
            'CurrentPassword': 'required',
            'NewPassword': {
                'required': true,
                'minlength': 8
            },
            'ConfirmPassword': {
                'required': true,
                'equalTo': "#NewPassword"
            }
        },
        'messages': {
            'CurrentPassword': {
                'required': "@Localizer["Nuvarande_lösenord_måste_fyllas_i"]"
            },
            'NewPassword': {
                'required': "@Localizer["Nytt_lösenord_måste_fyllas_i"]",
                'minlength': "@Localizer["Nytt_lösenord_måste_vara_minst_8_tecken_långt"]"
            },
            'ConfirmPassword': {
                'required': "@Localizer["Upprepa_lösenord_måste_fyllas_i"]",
                'equalTo': "@Localizer["Lösenord_måste_stämma_överens"]"
            }
        },
        'submitHandler': function (form) {
            $(form).find('input[type=submit]').attr('disabled', 'disabled');
            form.submit();
        }
    });
</script>