@model CreateClient
@{
    Title("Register Application");
}
<div class="page-title">
    <span class="text-semibold">Register</span> Application
</div>
@using (Html.PostWithAttachment())
{
    @Html.ValidationAlert("Validation errors occured", "Please correct the errors in the form")
    <div class="row">
        <div class="col-md-9">
            @Html.FormGroup(x => x.Name).AsteriskLabel("Application name").TextBox().Validate().Help("Something users will recognize and trust").Build()
            @Html.FormGroup(x => x.Description).AsteriskLabel("Application description").TextArea("Application description is optional").Validate().Help("This is displayed to all potential users of your application").Build()
        </div>
        <div class="col-md-3">
            @Html.Hr(new { @class = "profile-content-hr no-grid-gutter-h" })
            <div class="profile-block">
                <div class="panel profile-avatar">
                    @Html.Thumbnail(new { @class = "thumbnail-icon-info thumbnail-icon-lg thumbnail-icon-lg-border" }, new { @class = "fa-cog" })
                </div>
                @Html.Br()
                @Html.File(x => x.Logotype, "Browse ...", new { @class = "btn-primary" })
            </div>
        </div>
    </div>
    @Html.Hr()
    @Html.FormGroup(x => x.AccessTokenLifetime).Label("Application access token lifetime").TextBox("60", new { @type = "number" }).Validate().Help("Your application's access token lifetime in minutes").Build()
    @Html.FormGroup(x => x.RefreshTokenLifetime).Label("Application refresh token lifetime").TextBox("60", new { @type = "number" }).Validate().Help("Your application's refresh token lifetime in minutes").Build()
    @Html.FormGroup(x => x.RedirectionEndpoint).Label("Application callback").TextBox().Validate().Help("Your application's callback URL. Read our OAuth documentation for more information").Build()
    @Html.Hr()
    @Html.FormGroup(x => x.AuthorizationGrants).AsteriskLabel("Application grant").CheckboxList().Validate().Build()
    @Html.FormGroup(x => x.IsConfidential.Selected).Checkbox("Confidential?").Validate().Help("Whether your application is public or confidential").Build()
    @Html.Hr()
    @Html.FormGroup(x => x.Scopes).AsteriskLabel("Scopes").CheckboxList().Validate().Build()
    @Html.Hr()
    @Html.FormGroup(x => x.Tenants).AsteriskLabel("Tenants").CheckboxList().Validate().Build()
    @Html.Hr(new { @class = "no-grid-gutter-h" })
    @Html.Submit("Register application", new { @class = "btn-primary btn-lg" })
}