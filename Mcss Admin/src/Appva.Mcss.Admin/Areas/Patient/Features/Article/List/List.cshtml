@using Appva.Mcss.Admin.Application.Common;
@model ListArticleModel
@{
    SetTitle("Beställningslista");
}
@Html.Partial("~/Areas/Patient/Features/Patient/Partials/_PatientDetails.cshtml", Model.Patient)
@Html.Partial("~/Features/Shared/_SubMenuPartial.cshtml", Model.Patient)
<script>
    $(document).ready(function () {
        $('.select-style').change(function () {
            $('#submit-button').attr('disabled', false);
        });
    });
</script>
<div class="section section--hspace section--vspace orderlist">
    <div class="distributor distributor--justified">
        <div>
            <h2>@(Model.HasArticles ? "Begärd påfyllning" : "Artiklar")</h2>
        </div>
        <div>
            @if (Html.HasPermissionFor(Permissions.OrderList.Create))
            {
                <div class="control-container control-container--inline">
                    <a href="@Url.Action("Add", "Article")#add-article" class="button button--ui open-in-dialog"><svg class="icon icon--mr" aria-hidden="true"><use xlink:href="/Assets/images/icons/icon.sprite.svg#plus-icon"></use></svg>Lägg till artikel</a>
                </div>
            }
        </div>
    </div>
    @if (Model.OrderedArticles.Count > 0)
    {
        using (Html.BeginForm())
        {
            <table class="table-general">
                <thead>
                    <tr>
                        <th scope="col">Namn</th>
                        <th scope="col">Beskrivning</th>
                        <th scope="col">Kategori</th>
                        <th scope="col">Begärdes av</th>
                        <th scope="col">Begärdes när</th>
                        <th scope="col">Status</th>
                    </tr>
                </thead>
                <tbody>
                    @for(int i = 0; i < Model.OrderedArticles.Count; i++)
                    {
                        <tr>
                            <td>@Model.OrderedArticles[i].Name</td>
                            <td>@Model.OrderedArticles[i].Description</td>
                            <td>@Model.OrderedArticles[i].Category.Name</td>
                            <td>@(Model.OrderedArticles[i].OrderedBy.FirstName + " " + Model.OrderedArticles[i].OrderedBy.LastName)</td>
                            <td><time datetime="@Model.OrderedArticles[i].OrderDate">@(Model.OrderedArticles[i].FormattedOrderDate)</time></td>
                            @if (Html.HasPermissionFor(Permissions.OrderList.Update))
                            {
                                <td class="inliner">
                                    <div class="control-container control-container--select control-container--no-margin">
                                        @Html.LabelFor(x => x.OrderedArticles[i].SelectedOrderOptionKey, "Status", new { @class = "visually-hidden" })
                                        @Html.DropDownListFor(x => x.OrderedArticles[i].SelectedOrderOptionKey, new SelectList(Model.OrderOptions, "Key", "Value", Model.OrderedArticles[i].SelectedOrderOptionKey), new { @class = "select-style" })
                                    </div>
                                    <div class="control-container control-container--no-margin">
                                        @Html.HiddenFor(x => x.OrderedArticles[i].Id)
                                    </div>
                                </td>
                            }
                            else
                            { 
                                <td>@Model.OrderedArticles[i].SelectedOrderOptionValue</td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
            if(Html.HasPermissionFor(Permissions.OrderList.Update))
            {
                <div class="distributor distributor--justified">
                    <div>
                        <div class="control-container">
                            <input type="hidden" name="PatientId" value="@Model.Patient.Id" />
                            @Html.Submit("Uppdatera alla", new { id = "submit-button", @class = "button", disabled = "disabled" })
                        </div>
                    </div>
                </div>
            }
        }
    }
    else if(Model.RefilledArticles.Count > 0 && Model.OrderedArticles.Count == 0)
    {
        <div class="section section--lightblue section--hspace section--vspace">
            <p>Alla artiklar är påfyllda.</p>
        </div>
    }
    @(Model.HasArticles == false ? Html.Raw("") : Html.Raw("<h2>Artiklar</h2>"))
    @if (Model.RefilledArticles.Count > 0)
    {
        <table class="table-general">
            <thead>
                <tr>
                    <th scope="col">Namn</th>
                    <th scope="col">Beskrivning</th>
                    <th scope="col">Kategori</th>
                    @if (Html.HasPermissionFor(Permissions.OrderList.Edit) || Html.HasPermissionFor(Permissions.OrderList.Delete))
                    {
                        <th scope="col">Åtgärder</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var article in Model.RefilledArticles)
                {
                    <tr>
                        <td>@article.Name</td>
                        <td>@(article.Description == null ? string.Empty : article.Description)</td>
                        <td>@(string.IsNullOrEmpty(article.ArticleCategory.Name) ? "Saknas" : article.ArticleCategory.Name)</td>
                        @if (Html.HasPermissionFor(Permissions.OrderList.Edit) || Html.HasPermissionFor(Permissions.OrderList.Delete))
                        {
                            <td>
                                @if (Html.HasPermissionFor(Permissions.OrderList.Edit))
                                {
                                    @Html.ActionLink("Ändra", "Edit", "Article", null, null, "edit-article", new { Article = article.Id }, new { @class = "button button--inline open-in-dialog" })
                                }
                                @if (Html.HasPermissionFor(Permissions.OrderList.Delete))
                                {
                                    @Html.ActionLink("Ta bort", "Delete", "Article", new { Article = article.Id }, new { @class = "button button--negative button--inline article-del" })
                                }
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="section section--lightblue section--hspace section--vspace">
            <p>@(Model.OrderedArticles.Count > 0 ? "Inga påfyllda artiklar hittades." : "Inga artiklar hittades för den här patienten.")</p>
        </div>
    }
</div>