@model Appva.Mcss.Admin.Models.DeviceDetailsModel
@{
    SetTitle("Enhetsinformation: " + Model.Device.Name);
    string message = "Ej tillgänglig";
}
<div id="subheader" class="cf">
    <h1>Enhetsinformation</h1>
    @Html.ActionLink("Redigera", "Edit", "Devices", new { Id = Model.Device.Id }, new { @class = "btn lb-link" })
    @Html.ActionLink("Larmkonfiguration", "", "", null, new { @class = "btn" })
</div>

<div id="content" class="log cf">
    <div id="signlist">
        <h3 class="section-title">@Model.Device.Name</h3>
        <table class="device-table">
            <tbody>
                <tr>
                    <td>Beskrivning</td>
                    <td>@(string.IsNullOrEmpty(Model.Device.Description) ? message : Model.Device.Description)</td>
                </tr>
                <tr>
                    <td>Registrerad</td>
                    <td>@(Model.Device.CreatedAt == null ? message : Model.Device.CreatedAt.ToString())</td>
                </tr>
                <tr>
                    <td>Modifierad</td>
                    <td>@(Model.Device.Modified == null ? message : Model.Device.Modified.ToString())</td>
                </tr>
                <tr>
                    <td>Senast använd</td>
                    <td>@(Model.Device.LastUsedDate == null ? message : Model.Device.LastUsedDate.ToString())</td>
                </tr>
                <tr>
                    <td>Larmkonfiguration</td>
                    <td>@(Model.HasAlert == true ? "Aktiv" : "Inaktiv")</td>
                </tr>
                <tr>
                    <td>Aktiv</td>
                    <td>@(Model.Device.IsActive ? "Ja" : "Nej")</td>
                </tr>
                <tr>
                    <td>Autentiseringsmetod</td>
                    <td>@(Model.Device.AuthenticationMethod)</td>
                </tr>
                <tr>
                    <td>Kopplad till avdelning</td>
                    <td>@(Model.Device.Taxon == null ? message : Model.Device.Taxon.Name)</td>
                </tr>
                <tr>
                    <td>OS</td>
                    <td>@(string.IsNullOrEmpty(Model.Device.OS) ? message : Model.Device.OS)</td>
                </tr>
                <tr>
                    <td>OS Version</td>
                    <td>@(string.IsNullOrEmpty(Model.Device.OSVersion) ? message : Model.Device.OSVersion)</td>
                </tr>
                <tr>
                    <td>Version</td>
                    <td>@Model.Device.Version</td>
                </tr>
                <tr>
                    <td>Hårdvara</td>
                    <td>@(string.IsNullOrEmpty(Model.Device.Hardware) ? message : Model.Device.Hardware)</td>
                </tr>
                <tr>
                    <td>Last Pinged Date</td>
                    <td>@(Model.Device.LastPingedDate == null ? message : Model.Device.LastPingedDate.ToString())</td>
                </tr>
                <tr>
                    <td>App Bundle</td>
                    <td>@(string.IsNullOrEmpty(Model.Device.AppBundle) ? message : Model.Device.AppBundle)</td>
                </tr>
                <tr>
                    <td>App Version</td>
                    <td>@(string.IsNullOrEmpty(Model.Device.AppVersion) ? message : Model.Device.AppVersion)</td>
                </tr>
                <tr>
                    <td>Azure Push Id</td>
                    <td>@(string.IsNullOrEmpty(Model.Device.AzurePushId) ? message : Model.Device.AzurePushId)</td>
                </tr>
                <tr>
                    <td>Uuid</td>
                    <td>@(string.IsNullOrEmpty(Model.Device.Uuid) ? message : Model.Device.Uuid.ToString())</td>
                </tr>
                <tr>
                    <td>Push Uuid</td>
                    <td>@(string.IsNullOrEmpty(Model.Device.PushUuid) ? message : Model.Device.PushUuid.ToString())</td>
                </tr>
            </tbody>
        </table>
        <p class="alert-box-message"></p>
        <label>Larmkonfiguration</label>
        @Html.CheckBoxFor(x => x.HasAlert, new { @class = "alert-checkbox" })
        @Html.LabelFor(x => x.HasAlert, "Aktivera larm för den här enheten", new { @class = "checkbox-label" })
        <div class="alert-box" @(Model.HasAlert ? Html.Raw("") : Html.Raw("style='display:none'"))>
            <div class="checkbox-container">
                <p>Lägg till avdelningar för den valda nivån.</p>
                @Html.DropDownListFor(x => x.EscalationLevelId, new SelectList(Model.EscalationLevels, "Id", "Name"))
                <p><a href="javascript:;" class="check-all">Markera alla</a> | <a href="javascript:;" class="uncheck-all">Avmarkera alla</a></p>
                @Html.FormGroup(x => x.DeviceLevelTaxons, "text").CheckboxList().Validate().Build()
            </div>
        </div>
    </div>
</div>