@model Appva.Mcss.Admin.Models.DelegationFormModel
@{ ViewBag.Title = "Lägg till delegering"; }
<div class="std-panel std-form delegdialog lb-validate-form" data-valclass="DelegationCreate">
    @using (Html.BeginForm(new { id = Model.Id })) {
        <h3 class="section-title">Lägg till delegering</h3>
        <div class="row toggle-group cf">
            <div class="radio col">
                <label for="activity-type-1">Välj i listan</label>
            </div>
        </div>
        <div class="toggle-target toggle-target-1">
            <div class="listgroup cf">
                <ul class="catlist">
                    @{ var iterator = 1; }
                    @foreach (var delegationTemplate in Model.DelegationTemplate) {
                        <li><a class="@String.Format("cat{0}", iterator)" href="#">@delegationTemplate.Key.Name</a></li>
                        iterator++;
                    }
                </ul>
                @{
                    var subiterator = 1;
                }
                <ul class="deleglist">
                    @foreach (var delegationTemplate in Model.DelegationTemplate) {
                        foreach (var subDelegationTemplate in delegationTemplate.Value) {
                            <li class="@String.Format("cat{0}", subiterator)">
                                <label>
                                    <input type="checkbox" name="Delegations" value="@subDelegationTemplate.Id" />
                                    @subDelegationTemplate.Name
                                </label>
                            </li>
                        }
                        subiterator++;
                    }
                </ul>
                @Html.ValidationMessageFor(m => m.Delegations)
                <input type="hidden" id="TestDelegations" name="TestDelegations" />
            </div>
        </div>
        
        <div class="row toggle-group cf">
            <div class="radio col">
                <label for="activity-type-2">Gäller för:</label>
            </div>
            <div class="radio col">                                              
                @Html.RadioButtonFor(m => m.ValidForSpecificPatients, false, new { @id = "activity-type-1", @class = "toggle", @data_toggletarget = "toggle-target-1", @data_togglegroup = "toggle-delegation" })
                <label for="activity-type-1">Adress</label>
            </div>
            <div class="radio col">
                @Html.RadioButtonFor(m => m.ValidForSpecificPatients, true, new { @id = "activity-type-2", @class = "toggle", @data_toggletarget = "toggle-target-2", @data_togglegroup = "toggle-delegation" })
                <label for="activity-type-2">Boende</label>
            </div>
        </div>
    <div class="toggle-target toggle-target-1 toggle-delegation">
        <div class="select selectgroup cf">
            @if (Model.OrganizationTaxons.IsNotNull())
            {
                foreach (var taxon in Model.OrganizationTaxons)
                {
                    <div class="select">
                        <label class="structural">@taxon.Label</label>
                        @Html.DropDownList(taxon.Id,
                                    new SelectList(taxon.Taxons, "Value", "Text", taxon.Selected),
                                    string.Format("Välj {0}...", taxon.OptionLabel),
                                    new { @class = "dropdown" }
                                )
                    </div>
                }
            }
            @Html.HiddenFor(m => m.OrganizationTaxon)
            @Html.ValidationMessageFor(m => m.OrganizationTaxon)
        </div>
    </div>
    <div class="toggle-target toggle-target-2 toggle-delegation">
        <div class="select multisel">
            @Html.DropDownListFor(
            m => m.Patient,
            new SelectList(Model.PatientItems, "Value", "Text", Model.Patient),
            "Alla",
            new { }
        )
            @Html.ValidationMessageFor(m => m.Patients)
            <input type="hidden" id="TestPatients" name="TestPatients" />
        </div>
    </div>
        <div class="dateinput">
            @Html.LabelFor(m => m.StartDate)
            @Html.EditorFor(m => m.StartDate)
            @Html.ValidationMessageFor(m => m.StartDate)
            @Html.LabelFor(m => m.EndDate)
            @Html.EditorFor(m => m.EndDate)
            @Html.ValidationMessageFor(m => m.EndDate)
            <em class="hint">Max 1 år</em>
        </div>
        <p class="info">Observera att delegeringen börjar gälla först efter aktivering.</p>
        <div class="submit">
            @Html.AntiForgeryToken()
            @Html.Submit("Spara")
            @*Html.Cancel("Avbryt")*@
        </div>
        }
    </div>
