@using Appva.Core.Utilities;
@using Appva.Mcss.Admin.Application.Common
@model Appva.Mcss.Admin.Models.ListInventoryModel
@{
    SetTitle("Förbrukningsjournal");
    var today = DateTimeUtilities.Now().Date;
    var yesterday = DateTimeUtilities.Now().Date.AddDays(-1);
}
@Html.Partial("~/Areas/Patient/Features/Patient/Partials/_PatientDetails.cshtml", Model.Patient)
@Html.Partial("~/Features/Shared/_SubMenuPartial.cshtml", Model.Patient)
<div id="subheader" class="cf">
    <h1>Förbrukningsjournal</h1>
    @Html.ActionLink(Permissions.Inventory.Create, "Lägg till", "Create", "Inventory", null, new { @class = "btn lb-link" })
    @if (Model.Inventory != null) 
    {
        using (Html.BeginForm("List", "Inventory", FormMethod.Get)) 
        {
            <p class="filter">
                <strong>Tid:</strong>
                @Html.Hidden("inventoryId", Model.Inventory.Id)
                @Html.DropDownList("year", Model.Years, "År")
                @Html.DropDownList("month", Model.Months, "Månad")
                @Html.Submit("Visa")
            </p>
        }
    }
</div>
<div id="content" class="@(Model.Inventory != null ? "has-nav report-view cf" : "")">
    @if (Model.Inventory != null)
    {
        <div class="inventory-nav">
            @if (Model.ActiveInventories.IsNotNull() && Model.ActiveInventories.Count > 0)
            {
                <h3>Aktuella</h3>
                <ul>
                    @foreach (var inventory in Model.ActiveInventories)
                    {
                        <li class="@(inventory.Key.Equals(Model.Inventory.Id) ? "sel" : "")">
                            @Html.ActionLink(inventory.Value, "List", new { Id = Model.Patient.Id, InventoryId = inventory.Key })
                        </li>
                    }
                </ul>
            }
            @if (Model.InactiveInventories.IsNotNull() && Model.InactiveInventories.Count > 0)
            {
                <h3>Borttagna</h3>
                <ul>
                    @foreach (var inventory in Model.InactiveInventories)
                    {
                        <li class="@(inventory.Key.Equals(Model.Inventory.Id) ? "sel" : "")">
                            @Html.ActionLink(inventory.Value, "List", new { Id = Model.Patient.Id, InventoryId = inventory.Key })
                        </li>
                    }
                </ul>
            }
        </div>
        <div id="content-primary">
            <div id="report" class="cf">
                <div class="data cf">
                    <h2 class="heading">
                        Status för @Model.Inventory.Description
                        <span class="inventory-tools">
                            @if (Model.Inventory.IsActive)
                            {
                                @Html.ActionLink(Permissions.Inventory.Update, "Ändra", "Update", "Inventory", new { Id = Model.Patient.Id, Inventory = Model.Inventory.Id, returnUrl = HttpContext.Current.Request.Url.AbsoluteUri }, new { @class = "btn btn-new lb-link" })
                                @Html.ActionLink(Permissions.Inventory.Delete, "Ta bort", "Inactivate", "Inventory", new { Id = Model.Patient.Id, Inventory = Model.Inventory.Id, returnUrl = HttpContext.Current.Request.Url.AbsoluteUri }, new { @class = "btn btn-del item-delete-confirmation", data_text = "ta bort förbrukningsjournalen" })
                            }
                            else
                            {
                                @Html.ActionLink(Permissions.Inventory.Update, "Aktivera", "Reactivate", "Inventory", new { Id = Model.Patient.Id, Inventory = Model.Inventory.Id, returnUrl = HttpContext.Current.Request.Url.AbsoluteUri }, new { @class = "btn" })
                            }
                        </span>
                    </h2>

                    <dl class="note">
                        <dt>Aktuellt saldo</dt>
                        <dd>@string.Format("{0} {1}", Model.Inventory.CurrentLevel, Model.Inventory.Unit)</dd>
                    </dl>
                    <dl>
                        <dt>Senaste kontrollräkning</dt>
                        <dd class="small">@(Model.Inventory.LastRecount.HasValue ? TimeSpanDifference.ToShortDateTime(Model.Inventory.LastRecount.GetValueOrDefault(), "Idag", "Igår") : "-")</dd>
                    </dl>
                    <dl>
                        <dt>Förbrukningsjournalens enhet</dt>
                        <dd class="small">@(Model.Inventory.Unit.IsNotEmpty() ? Model.Inventory.Unit : "-")</dd>
                    </dl>
                </div>

                <div class="listing">
                    <h2 class="heading">Transaktioner under perioden
                        @if (Model.Inventory.IsActive)
                        {
                            <span class="inventory-tools">
                                @Html.ActionLink("Uttag", "Withdraw", new { Id = Model.Patient.Id, InventoryId = Model.Inventory.Id, returnUrl = HttpContext.Current.Request.Url.AbsoluteUri }, new { @class = "btn btn-new lb-link" })
                                @Html.ActionLink("Tillför mängd", "Add", new { Id = Model.Patient.Id, InventoryId = Model.Inventory.Id, returnUrl = HttpContext.Current.Request.Url.AbsoluteUri }, new { @class = "btn btn-new lb-link" })
                                @Html.ActionLink("Kontrollräkna", "Recount", new { Id = Model.Patient.Id, InventoryId = Model.Inventory.Id, returnUrl = HttpContext.Current.Request.Url.AbsoluteUri }, new { @class = "btn btn-new lb-link" })
                            </span>
                        }
                    </h2>
                    @if (Model.Transactions != null && Model.Transactions.Count == 0) {
                        <div id="alarm-status">
                            <h2 class="ok">Inga händelser för angiven tidsperiod.</h2>
                        </div>
                    }
                    else {
                        <div id="signed-events">
                            <table>
                                <thead>
                                    <tr class="head">
                                        <th scope="col">
                                            Transaktion
                                        </th>
                                        <th scope="col">
                                            Antal
                                        </th>
                                        <th scope="col">
                                            Saldo-status
                                        </th>
                                        <th scope="col">
                                            Notis
                                        </th>
                                        <th scope="col">
                                            Genomförd
                                        </th>
                                        <th scope="col">
                                            Genomförd av
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.Transactions.IsNotNull()) 
                                    {
                                        foreach (var transaction in Model.Transactions) 
                                        {
                                            var recountAlarm = false;
                                            if (transaction.Operation == "recount") 
                                            {
                                                recountAlarm = transaction.Value != transaction.PreviousInventoryValue;
                                            }
                                            <tr @( recountAlarm ? "class=alarm" : "")>
                                                <td>
                                                    @if (Model.OperationTranslationDictionary.ContainsKey(transaction.Operation)) 
                                                    {
                                                        @Model.OperationTranslationDictionary[transaction.Operation]
                                                    }
                                                    else 
                                                    {
                                                        string.Format("Couldn't translate \"{0}\"", transaction.Operation);
                                                    }
                                                </td>
                                                <td>@transaction.Value</td>
                                                <td>@transaction.CurrentInventoryValue</td>
                                                @if (recountAlarm) 
                                                {
                                                    <td>
                                                        <img src="@Url.Image("icn-alarm.png")" alt="Larm" />
                                                        @if (transaction.Description.IsNotEmpty())
                                                        {
                                                            <strong>Notis:</strong> @transaction.Description
                                                        }
                                                        else
                                                        {
                                                            <strong>Avvikelse:</strong> @:Kontollräknat saldo stämmer ej
                                                        }
                                                        
                                                    </td>
                                                }
                                                else 
                                                {
                                                    <td>@(transaction.Description != null || transaction.Description == "" ? transaction.Description : "-")</td>
                                                }
                                                <td>@string.Format("{0} {1:HH:mm}",TimeSpanDifference.ToShortDateTime(transaction.CreatedAt, "Idag", "Igår"), transaction.CreatedAt)</td>
                                                <td>@transaction.Account.FullName</td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                            @if (Model.Transactions.IsNotNull()) 
                            {
                                @Html.Pager(Model.PageSize, Model.Page, Model.TotalTransactionCount).Options(o => o
                                        .DisplayTemplate("Pagination")
                                        .MaxNrOfPages(15)
                                        .AlwaysAddFirstPageNumber()
                                        .AddRouteValue("scheduleSettingsId", Model.Inventory.Id)
                                        .AddRouteValue("startDate", Model.StartDate)
                                        .AddRouteValue("endDate", Model.EndDate))
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    }
    else 
    {
        <div id="content-primary">
            <div id="alarm-status">
                <h2 class="ok">Den boende har ingen förbrukningsjournal.</h2>
            </div>
        </div>
    }
</div>