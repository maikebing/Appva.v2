@model Appva.Mcss.Web.ViewModels.SequenceViewModel
@{ ViewBag.Title = "Ändra"; }

<div class="lb-panel lb-validate-form" data-valclass="SequenceEdit">
	<div class="std-panel activity-edit std-form">
    @using (Html.BeginForm()) {
        <div class="row cf">
            <div class="form-section col">
                <h3 class="section-title">Ange insats</h3>
                <div class="text large">
                    @Html.LabelFor(m => m.Name)
                    @Html.EditorFor(m => m.Name, new { @class = "wide" })
                    @Html.ValidationMessageFor(m => m.Name)
                </div>
                <div class="text large">
				    @Html.LabelFor(m => m.Description)
                    @Html.TextAreaFor(m => m.Description, new { @rows = "24", @cols = "80" })
                    @Html.ValidationMessageFor(m => m.Description)
			    </div>
                <div class="checkbox">
                    @Html.CheckBoxFor(m => m.Nurse, new { @class = "nurse" })
                    @Html.LabelFor(m => m.Nurse)
                </div>
                @if (Model.Delegations.Count() > 0) { 
                    <div class="select">
                        @Html.LabelFor(m => m.Delegation)
                        @Html.DropDownListFor(
                            m => m.Delegation,
                            new SelectList(Model.Delegations, "Value", "Text", Model.Delegation),
                            "Välj delegering ...",
                            new { @class = "delegation" }
                        )
                        @Html.ValidationMessageFor(m => m.Delegation)
	                </div>
                }
            </div>
            <div class="form-section wide-section col">
                <h3 class="section-title">Ange när det ska ges</h3>
				<div class="row toggle-group cf">
					<div class="radio col">
                        @Html.RadioButtonFor(m => m.OnNeedBasis, false, new { @id = "activity-type-1", @class = "toggle", @data_toggletarget = "toggle-target-1" })
						<label for="activity-type-1">Stående</label>
					</div>
					<div class="radio col">
                        @Html.RadioButtonFor(m => m.OnNeedBasis, true, new { @id = "activity-type-2", @class = "toggle", @data_toggletarget = "toggle-target-2" })
						<label for="activity-type-2">Vid behov</label>
					</div>
				</div>
				<div class="toggle-target toggle-target-1">
					<div class="row cf">
						<div class="select col">
                            @Html.LabelFor(m => m.Interval)
                            @Html.DropDownListFor(
                                m => m.Interval,
                                new SelectList(Model.Intervals, "Value", "Text", Model.Interval),
                                "Välj frekvens ...",
                                new { @class = "freq-select" }
                            )
                            @Html.ValidationMessageFor(m => m.Interval)
						</div>
						<div class="text freq-show col">
							<a class="btn btn-mdatepick" href="#">Välj dagar</a>
                            @Html.HiddenFor(m => m.Dates, new { @id = "activity-freq-days" })
						</div>
						<div class="text freq-hide col">
                            @Html.LabelFor(m => m.StartDate)
                            @Html.EditorFor(m => m.StartDate)
                            @Html.ValidationMessageFor(m => m.StartDate)
						</div>
						<div class="text freq-hide col">
							@Html.LabelFor(m => m.EndDate)
                            @Html.EditorFor(m => m.EndDate)
                            @Html.ValidationMessageFor(m => m.EndDate)
						</div>
					</div>
					<div class="checkbox-grid">
						<strong class="label">Klockslag:</strong>
						<div class="wrap cf">
                            @Html.EditorFor(m => m.Times)
                            @Html.ValidationMessageFor(m => m.Times)
                            <input id="TestTimes" name="TestTimes" type="hidden" />
						</div>
					</div>
					<div class="text mini label-group">
						<strong class="label">Ges inom:</strong>
						<label>@Html.TextBoxFor(m => m.RangeInMinutesBefore, new { @type = "number", @min = "0", @max = "60", @autocomplete = "off" }) minuter innan</label>
						@Html.ValidationMessageFor(m => m.RangeInMinutesBefore)
                        <label>@Html.TextBoxFor(m => m.RangeInMinutesAfter, new { @type = "number", @min = "0", @max = "60", @autocomplete = "off" }) minuter efter</label>
					    @Html.ValidationMessageFor(m => m.RangeInMinutesAfter)
                    </div>
					<div class="reminder">
						<div class="checkbox">
                            @Html.CheckBoxFor(m => m.Reminder, new { @class = "toggle", @data_toggletarget = "toggle-target-3", @autocomplete = "off" })
							@Html.LabelFor(m => m.Reminder)
						</div>
						<div class="toggle-target-3 row cf">
							<div class="text mini col">
                                @Html.LabelFor(m => m.ReminderInMinutesBefore)
                                @Html.TextBoxFor(m => m.ReminderInMinutesBefore, new { @type = "number", @min = "0", @max = "120", @autocomplete = "off" })
								minuter innan klockslag.
                                @Html.ValidationMessageFor(m => m.ReminderInMinutesBefore)
							</div>
							@*<div class="select col">
								@Html.LabelFor(m => m.ReminderRecipient)
                                @Html.DropDownListFor(
                                    m => m.ReminderRecipient,
                                    new SelectList(Model.ReminderRecipients, "Value", "Text", Model.ReminderRecipient),
                                    "Välj mottagare ..."
                                )
                                @Html.ValidationMessageFor(m => m.ReminderRecipient)
							</div>*@
						</div>
					</div>
				</div>
				<div class="toggle-target toggle-target-2">
					<div class="row cf">
						<div class="text col">
                            @Html.LabelFor(m => m.OnNeedBasisStartDate)
                            @Html.EditorFor(m => m.OnNeedBasisStartDate)
                            @Html.ValidationMessageFor(m => m.OnNeedBasisStartDate)
						</div>
						<div class="text col">
                            @Html.LabelFor(m => m.OnNeedBasisEndDate)
                            @Html.EditorFor(m => m.OnNeedBasisEndDate)
                            @Html.ValidationMessageFor(m => m.OnNeedBasisEndDate)
						</div>
					</div>
				</div>
            </div>
        </div>
	    <div class="submit">
            @Html.AntiForgeryToken()
            @Html.Submit("Spara")
            @Html.Cancel("Avbryt")
	    </div>
    }
	</div>
</div>