@using Appva.Mcss.Admin.Application.Common
@model ListAccountModel
@{
    SetTitle(Localizer["Medarbetare"].ToString()); 
}
<div id="subheader" class="cf">
	<h1>@Localizer["Medarbetare"]</h1>
	@Html.ActionLink(Permissions.Practitioner.Create, Localizer["Ny_medarbetare"].ToString(), "Create", "Accounts", null, new { @class = "btn lb-link" })
	@Html.Partial("_AccountSearch")
</div>
<div class="col-wrap cols-2-1 cf">
	<div class="col col-1">
		<div class="filter-ctrl">
			@using (Html.BeginForm("List", "Accounts", FormMethod.Get, new { @class = "filter-form" }))
			{
                <div class="filter-row">
                    <strong>@Localizer["vvisa_"]</strong>
                    <ul>
                        <li>@Html.ActionLink(Localizer["Alla"].ToString(), "List", null, new { @class = (!Model.IsFilterByCreatedByEnabled.GetValueOrDefault(false) && Model.IsFilterByIsActiveEnabled.GetValueOrDefault(true) && !Model.IsFilterByIsPausedEnabled.GetValueOrDefault(false) && !Model.IsFilterByIsSynchronizedEnabled.HasValue) ? "div sel" : "div" })</li>
                        <!--li>@Html.ActionLink(Localizer["Mina_delegeringar"].ToString(), "List", new { FilterByCreatedBy = true }, new { @class = (Model.IsFilterByCreatedByEnabled.GetValueOrDefault(false)) ? "div sel" : "div" })</li-->
                        <li>@Html.ActionLink(Localizer["Borttagna"].ToString(), "List", new { isActive = false }, new { @class = !Model.IsFilterByIsActiveEnabled.GetValueOrDefault(true) ? "div sel" : "div" })</li>
                        <li>@Html.ActionLink(Localizer["Inaktiverade"].ToString(), "List", new { isPaused = true }, new { @class = (Model.IsFilterByIsPausedEnabled.GetValueOrDefault(false)) ? "div sel" : "div" })</li>
                        @if(Html.HasPermissionFor(Permissions.Synchronization.Read))
                        {
                            <li>@Html.ActionLink(Localizer["Synkroniserade"].ToString(), "List", new { isSynchronized = true }, new { @class = Model.IsFilterByIsSynchronizedEnabled.GetValueOrDefault(false) ? "div sel" : "div" })</li>
                            <li>@Html.ActionLink(Localizer["Ej_synkroniserade"].ToString(), "List", new { isSynchronized = false }, new { @class = (!Model.IsFilterByIsSynchronizedEnabled.GetValueOrDefault(true)) ? "div sel" : "div" })</li>
                        }
                    </ul>
                </div>
				if (Model.Delegations.Count > 0)
				{
					<div class="filter-row">
						<strong>@Localizer["Med_delegering_"]</strong>
						@Html.DropDownListFor(x => x.DelegationFilterId, new SelectList(Model.Delegations, "Value", "Text"), Localizer["Alla"].ToString())
					</div>
				}
				<div class="filter-row">
					<strong>@Localizer["Med_titel_"]</strong>
					@Html.DropDownListFor(x => x.RoleFilterId, new SelectList(Model.Roles, "Value", "Text"), Localizer["Alla"].ToString())
				</div>
				<div class="filter-row">
					@Html.Submit(Localizer["Visa"].ToString())
				</div>
		 }
		</div>
	</div>
	@if (Model.Accounts.Entities.Count > 0)
    {
        <div class="col col-2">
            <ul class="people delegate">
                @foreach (var item in Model.Accounts.Entities)
                {
                    <li class="cf @((item.HasExpiringDelegation) ? "update" : "")">
                        @if (item.IsActive)
                        {
                            @Html.ActionLink(Permissions.Practitioner.Inactivate, Localizer["Ta_bort"].ToString(), "Inactivate", "Accounts", new { Id = item.Id }, new { @class = "btn btn-del" })
                        }
                        @if (!item.IsActive && !item.IsPaused)
                        {
                            @Html.ActionLink(Permissions.Practitioner.Reactivate, Localizer["Aktivera"].ToString(), "Reactivate", "Accounts", new { Id = item.Id }, new { @class = "btn" })
                        }
                        @if (!item.IsPaused && item.IsActive)
                        {
                            @Html.ActionLink(Permissions.Practitioner.Pause, Localizer["Inaktivera"].ToString(), "Pause", "Accounts", new { Id = item.Id }, new { @class = "btn" })
                        }
                        @if (item.IsPaused)
                        {
                            @Html.ActionLink(Permissions.Practitioner.Resume, Localizer["Aktivera"].ToString(), "UnPause", "Accounts", new { Id = item.Id }, new { @class = "btn" })
                        }
                        <div class="h">
                            <h2>
                                @if (item.IsActive)
                                {
                                    @Html.ActionLink(item.FullName, "List", "Delegation", new { id = item.Id }, null)
                                }
                                else
                                {
                                    @item.FullName
                                }
                            </h2>
                            <span class="pnr">
                                @item.PersonalIdentityNumber
                            </span>
                        </div>
                        <div class="i">
                            <strong>@Localizer["Titel_"]</strong>
                            <span>@item.Title</span>
                        </div>
                        <div class="i">
                            <strong>@Localizer["Chef_"]</strong>
                            <span>@*item.Superior*@</span>
                        </div>
                        @if (Html.HasPermissionFor(Permissions.Synchronization.Read))
                        {
                            <div class="i">
                                <strong>@Localizer["Synkroniserad_"]</strong>
                                <span>@(item.IsSynchronized && item.LastSynchronized.HasValue ? item.LastSynchronized.GetValueOrDefault().ToString() : Localizer["Nej"].ToString()) </span>
                            </div>
                        }
                    </li>
                }
            </ul>
            @Html.Pager((int)Model.Accounts.PageSize, (int)Model.Accounts.CurrentPage, (int)Model.Accounts.TotalCount).Options(o => o
            .DisplayTemplate("Pagination")
            .MaxNrOfPages(15)
            .AlwaysAddFirstPageNumber()
            .AddRouteValue("IsActive", Model.IsFilterByIsActiveEnabled)
            .AddRouteValue("IsPaused", Model.IsFilterByIsPausedEnabled)
             .AddRouteValue("IsSynchronized", Model.IsFilterByIsSynchronizedEnabled)
            .AddRouteValue("FilterByCreatedBy", Model.IsFilterByCreatedByEnabled)
            .AddRouteValue("DelegationFilterId", Model.DelegationFilterId)
            .AddRouteValue("RoleFilterId", Model.RoleFilterId))
        </div>
    }
</div>