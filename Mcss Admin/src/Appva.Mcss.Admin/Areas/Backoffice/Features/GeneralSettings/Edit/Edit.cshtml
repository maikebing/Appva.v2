@*
@model Appva.Mcss.Admin.Areas.Backoffice.Models.EditGeneralSettingsModel
@{
    SetTitle("Admin - Uppdatera inställning");
}
<div id="pr-panel" class="std-panel std-form lb-panel-small lb-validate-form">
    @using (Html.Post(new { Id = Model.Id }))
    {
        <h3 class="section-title">Uppdatera inställning</h3>
        if (Model.IntValue != null)
        {
            <script language="javascript">
                function newBackgroundColor(color) {
                    var b = document.getElementById("BackgroundColor")
                    b.value = color;
                }
            </script>

            <p>
                Select Background Color
                <input name="colorpicker" id="color1" type="color" onchange="newBackgroundColor(colorpicker.value);">
                @Html.HiddenFor(x => x.BackgroundColor);
            </p>
            <p class="settings-title"><b>@Model.Name</b></p>
            <div class="settings-section">
                @Html.FormGroup(i => i.IntValue, "text").Label("Värde", new { @for = "setValue" }).TextBox(null, new { @id = "setValue", @type="number" }).Validate().Build()
            </div>
        }

        if (Model.BoolValue != null)
        {
            bool boolValue = (bool)Model.BoolValue;
            <p class="settings-title"><b>@Model.Name</b> (nuvarande värde: <b>@Model.BoolValue</b>)</p>
            <div class="settings-section">
                @Html.FormGroup(x => boolValue, "text").Checkbox("Sätt som <b>True</b>").Validate().Build()
            </div>
        }

        if (Model.StringValue != null)
        {
           






            if (Model.IsJson)
                        {
                            if (Model.InventoryObject != null)
                            {
                                int index = 0;

                                foreach (var item in Model.InventoryObject)
                                {
                        <div class="settings-section">
                            @Html.FormGroup(x => item.Name, "text").Label(null, new { @for = "name" + index
        }).TextBox(null, new { @id = "name" + index
    }).Validate().Build()

                            <label class="settings-label">Id</label>
                            <span class="textblock">@item.Id</span>

                            @for(int i = 0; i<item.Amounts.Count; i++)
                            {
                                item.Amount += item.Amounts[i].ToString("0.0####").Replace(',', '.');

                                if(i<item.Amounts.Count - 1)
                                {
                                    item.Amount += ", ";
                                }
                            }

                            @Html.FormGroup(x => item.Amount, "text large").Label(null, new { @for = "amount" + index }).TextArea(null, new { @id = "amount" + index }).Validate().Build()

                        </div>
                        index++;
                    }
                }

                else if (Model.PdfGenObject != null)
                {
                    <script language="javascript">
                function newBackgroundColor(color) {
                    var b = document.getElementById("BackgroundColor")
                    b.value = color;
                }
                    </script>

                    <p>
                        @Html.LabelFor(x => x.PdfGenObject.BackgroundColor)
                        <input name="colorpicker" id="color1" type="color" value="@Model.PdfGenObject.BackgroundColor" onchange="newBackgroundColor(colorpicker.value);">
                        @Html.HiddenFor(x => x.BackgroundColor)
                    </p>
                }

            }
            else
            {
                <div class="settings-section">
                    @Html.Label("Värde")
                    @Html.FormGroup(x => x.StringValue, "text large").TextArea().Validate().Build()
                </div>
            }
        }
        <div class="submit">
            @Html.Submit("Spara", new { @class = "btn" })
        </div>
    }
</div>
*@