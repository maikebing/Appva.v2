@model Appva.Mcss.Admin.Areas.Backoffice.Models.ListGeneralSettingsModel
@{
    SetTitle("Admin - Generella inställningar");
}
@Html.Partial("_BackofficeMenuPartial")
<div id="subheader" class="cf">
    <h1>Generella inställningar</h1>
</div>
<div id="content" class="cf">
    <script>
        var jsonObject = null;
        function colorPicker(id1, id2) {
            document.getElementById(id1).value = document.getElementById(id2).value;
        }
        function rgbToHex(id1, id2, r, g, b) {
            var bin = r << 16 | g << 8 | b;
            var hex = "#" + (function (h) { return new Array(7 - h.length).join("0") + h })(bin.toString(16))
            document.getElementById(id1).value = hex;
            document.getElementById(id2).value = hex;
        }
    </script>
    <div id="content-primary">
      @if (Model.List != null && Model.List.Count() > 0)
      {
          <ul id="setlist">
              @foreach (var item in Model.List)
              {
                  <li>
                      <div class="header">
                          <h3 title="@item.MachineName"><span style="background:@item.CategoryColorCode"></span>@item.Category</h3>
                          <h2>@item.Name</h2>
                          @*Html.ActionLink(item.Name, "Edit", "GeneralSettings", new { Id = item.Id }, new { @class = "lb-link" })*@
                          @if (item.Description != null && item.Description != string.Empty)
                          {
                              <p>@item.Description</p>
                          }
                      </div>
                      <div class="content">
                          @if (item.IntValue != null)
                          {
                              <div class="value-section">
                                  @Html.FormGroup(i => item.IntValue, "text").Label("Värde", new { @class = "value-label" }).TextBox(null, new { @type = "number", @class = "value-input" }).Validate().Build()
                              </div>
                          }

                          @if (item.BoolValue != null)
                          {
                              bool isBool = (bool)item.BoolValue;
                              <div class="settings-section t-center">
                                  @Html.FormGroup(x => isBool, "text").Checkbox("Aktivera").Validate().Build()
                              </div>
                          }

                          @if (item.StringValue != null)
                          {
                              if (item.PdfLookAndFeel != null)
                              {
                                    <div class="settings-section t-right">
                                        @Html.LabelFor(i => item.PdfLookAndFeel.IsCustomFooterTextEnabled, new { @class = "section-label attr-item", @title = "IsCustomFooterTextEnabled" })
                                        @Html.FormGroup(i => item.PdfLookAndFeel.IsCustomFooterTextEnabled).Checkbox("Aktivera").Validate().Build()
                                    </div>
                                    <div class="settings-section t-right">
                                        @Html.LabelFor(i => item.PdfLookAndFeel.IsCustomLogotypeEnabled, new { @class = "section-label attr-item", @title = "IsCustomLogotypeEnabled" })
                                        @Html.FormGroup(i => item.PdfLookAndFeel.IsCustomLogotypeEnabled).Checkbox("Aktivera").Validate().Build()
                                    </div>

                                    var attributes = new string[] { "value-section", "value-label attr-item", "p-left" };
                                    @Html.ColorInputGroup(x => item.PdfLookAndFeel.BackgroundColor, attributes, "colorPicker", item.PdfLookAndFeel.BackgroundColor)
                                    @Html.ColorInputGroup(x => item.PdfLookAndFeel.FontColor, attributes, "colorPicker", item.PdfLookAndFeel.FontColor)
                                    @Html.ColorInputGroup(x => item.PdfLookAndFeel.TableBorderColor, attributes, "colorPicker", item.PdfLookAndFeel.TableBorderColor)
                                    @Html.ColorInputGroup(x => item.PdfLookAndFeel.TableHeaderColor, attributes, "colorPicker", item.PdfLookAndFeel.TableHeaderColor)
                                  
                                    @*@Html.FormGroup(x => item.PdfLookAndFeel.TableBorderColor, "value-section").Label("Kantlinjefärg", new { @for = "pdf-tbc4", @class = "value-label attr-item" }).TextBox(null, new { id = "pdf-tbc4", value = "#000000", @class = "p-left", onchange = Html.Raw("colorPicker('pdf-tbcp4', this.id);") }).TextBox(null, new { id = "pdf-tbcp4", value = "#000000", type = "color", onchange = Html.Raw("colorPicker('pdf-tbc4', this.id);") }).Validate().Build()*@
                                }

                                if (item.SecurityTokenConfig != null)
                                {    <div class="value-section">
                                <a href="@item.SecurityTokenConfig.Audience">Schemas</a>
                            </div>
                                }

                                if (item.SecurityMailerConfig != null)
                                {
                                    <div class="settings-section t-right">
                                        @Html.LabelFor(i => item.SecurityMailerConfig.IsMailSigningEnabled, new { @class = "section-label attr-item" })
                                        @Html.FormGroup(i => item.SecurityMailerConfig.IsMailSigningEnabled, "text").Checkbox("Aktivera").Validate().Build()
                                    </div>
                                        <div class="settings-section t-right">
                                            @Html.LabelFor(i => item.SecurityMailerConfig.IsMobileDeviceRegistrationMailEnabled, new { @class = "section-label attr-item" })
                                            @Html.FormGroup(i => item.SecurityMailerConfig.IsMobileDeviceRegistrationMailEnabled, "text").Checkbox("Aktivera").Validate().Build()
                                        </div>
                                        <div class="settings-section t-right">
                                            @Html.LabelFor(i => item.SecurityMailerConfig.IsRegistrationMailEnabled, new { @class = "section-label attr-item" })
                                            @Html.FormGroup(i => item.SecurityMailerConfig.IsRegistrationMailEnabled, "text").Checkbox("Aktivera").Validate().Build()
                                        </div>
                                        <div class="settings-section t-right">
                                            @Html.LabelFor(i => item.SecurityMailerConfig.IsResetPasswordMailEnabled, new { @class = "section-label attr-item" })
                                            @Html.FormGroup(i => item.SecurityMailerConfig.IsResetPasswordMailEnabled, "text").Checkbox("Aktivera").Validate().Build()
                                        </div>
                                        <div class="settings-section t-right">
                                            @Html.LabelFor(i => item.SecurityMailerConfig.IsSecurityEventMailEnabled, new { @class = "section-label attr-item" })
                                            @Html.FormGroup(i => item.SecurityMailerConfig.IsSecurityEventMailEnabled, "text").Checkbox("Aktivera").Validate().Build()
                                        </div>
                                }

                                if (item.MachineName == item.machineNames[6])
                                {
                                    if (item.Name == "logout_timeout")
                                    {
                                        <div class="value-section">
                                            @Html.FormGroup(i => item.StringValue, "text").Label("Värde", new { @class = "value-label" }).TextBox(null, new { @type = "number", @class = "value-input" }).Validate().Build()
                                        </div>
                                    }

                                    if (item.Name == "security_level")
                                    {
                                        <div class="value-section">
                                            @Html.FormGroup(i => item.StringValue, "text").Label("Värde", new { @class = "value-label" }).TextBox(null, new { @class = "value-input" }).Validate().Build()
                                        </div>
                                    }
                                }

                                if (item.MachineName == item.machineNames[7])
                                {
                                    <div class="value-section">
                                        @Html.LabelFor(i => item.LdapConfig.FieldFirstName, new { @class = "value-label attr-item" })
                                        @Html.FormGroup(i => item.LdapConfig.FieldFirstName, "text").TextBox(null, new { @class = "p-left" }).Validate().Build()
                                    </div>
                                    <div class="value-section">
                                        @Html.LabelFor(i => item.LdapConfig.FieldLastName, new { @class = "value-label attr-item" })
                                        @Html.FormGroup(i => item.LdapConfig.FieldLastName, "text").TextBox(null, new { @class = "p-left" }).Validate().Build()
                                    </div>
                                    <div class="value-section">
                                        @Html.LabelFor(i => item.LdapConfig.FieldHsaId, new { @class = "value-label attr-item" })
                                        @Html.FormGroup(i => item.LdapConfig.FieldHsaId, "text").TextBox(null, new { @class = "p-left" }).Validate().Build()
                                    </div>
                                    <div class="value-section">
                                        @Html.LabelFor(i => item.LdapConfig.FieldMail, new { @class = "value-label attr-item" })
                                        @Html.FormGroup(i => item.LdapConfig.FieldMail, "text").TextBox(null, new { @class = "p-left" }).Validate().Build()
                                    </div>
                                    <div class="value-section">
                                        @Html.LabelFor(i => item.LdapConfig.FieldPin, new { @class = "value-label attr-item" })
                                        @Html.FormGroup(i => item.LdapConfig.FieldPin, "text").TextBox(null, new { @class = "p-left" }).Validate().Build()
                                    </div>
                                    <div class="value-section">
                                        @Html.LabelFor(i => item.LdapConfig.FieldUniqueIdentifier, new { @class = "value-label attr-item" })
                                        @Html.FormGroup(i => item.LdapConfig.FieldUniqueIdentifier, "text").TextBox(null, new { @class = "p-left" }).Validate().Build()
                                    </div>
                                    <div class="value-section">
                                        @Html.LabelFor(i => item.LdapConfig.FieldUsername, new { @class = "value-label attr-item" })
                                        @Html.FormGroup(i => item.LdapConfig.FieldUsername, "text").TextBox(null, new { @class = "p-left" }).Validate().Build()
                                    </div>
                                    <div class="value-section">
                                        @Html.LabelFor(i => item.LdapConfig.LdapPassword, new { @class = "value-label attr-item" })
                                        @Html.FormGroup(i => item.LdapConfig.LdapPassword, "text").TextBox(null, new { @class = "p-left" }).Validate().Build()
                                    </div>
                                    <div class="value-section">
                                        @Html.LabelFor(i => item.LdapConfig.LdapUser, new { @class = "value-label attr-item" })
                                        @Html.FormGroup(i => item.LdapConfig.LdapUser, "text").TextBox(null, new { @class = "p-left" }).Validate().Build()
                                    </div>
                                    <div class="value-section">
                                        @Html.LabelFor(i => item.LdapConfig.LdapString, new { @class = "value-label attr-item" })
                                        @Html.FormGroup(i => item.LdapConfig.LdapString, "text").TextBox(null, new { @class = "p-left" }).Validate().Build()
                                    </div>
                                }

                                if (item.MachineName == item.machineNames[8])
                                {
                                    <div class="value-section">
                                        @Html.FormGroup(i => item.StringValue, "text").Label("Värde", new { @class = "value-label" }).TextBox(item.StringValue, new { @class = "value-input" }).Validate().Build()
                                    </div>
                                }





                            }
                    </li>
                }
            </ul>
        }
        else
        {
            <div class="note">
                <h2>Inga inställningar hittades.</h2>
            </div>
        }
    </div>
</div>
