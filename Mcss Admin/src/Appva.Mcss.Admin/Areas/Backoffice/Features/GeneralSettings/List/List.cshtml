@model Appva.Mcss.Admin.Areas.Backoffice.Models.ListGeneralSettingsModel
@{
    SetTitle("Admin - Generella inställningar");
}
@Html.Partial("_BackofficeMenuPartial")
<div id="subheader" class="cf">
    <h1>Generella inställningar</h1>
</div>
<div id="content" class="cf">
    <script>
        function colorPicker(id1, id2) {
            document.getElementById(id1).value = document.getElementById(id2).value;
        }
    </script>
    <div id="content-primary">
      @if (Model.List != null && Model.List.Count() > 0)
      {
          <ul id="setlist">
              @foreach (var item in Model.List)
              {
                  <li>
                      <div class="header">
                          <h3 title="@item.MachineName"><span style="background:@item.CategoryColorCode"></span>@item.Category</h3>
                          <h2>@item.Name</h2>
                          @*Html.ActionLink(item.Name, "Edit", "GeneralSettings", new { Id = item.Id }, new { @class = "lb-link" })*@
                          @if (item.Description != null && item.Description != string.Empty)
                          {
                              <p>@item.Description</p>
                          }
                      </div>
                      <div class="content">
                          @if (item.IntValue != null)
                          {
                              <div class="value-section">
                                  @Html.FormGroup(i => item.IntValue, "text").Label("Värde", new { @class = "value-label" }).TextBox(null, new { @type = "number", @class = "value-input" }).Validate().Build()
                              </div>
                          }

                          @if (item.BoolValue != null)
                          {
                              bool isBool = (bool)item.BoolValue;
                              <div class="settings-section t-center">
                                  @Html.FormGroup(x => isBool, "text").Checkbox("Aktivera").Validate().Build()
                              </div>
                          }

                          @if (item.StringValue != null)
                          {
                                if (item.PdfGenObject != null)
                                {
                                    <div class="settings-section t-right">
                                        @Html.LabelFor(i => item.PdfGenObject.IsCustomFooterTextEnabled, new { @class = "section-label attr-item", @title = "IsCustomFooterTextEnabled" })
                                        @Html.FormGroup(i => item.PdfGenObject.IsCustomFooterTextEnabled).Checkbox("Aktivera").Validate().Build()
                                    </div>
                                    <div class="settings-section t-right">
                                        @Html.LabelFor(i => item.PdfGenObject.IsCustomLogotypeEnabled, new { @class = "section-label attr-item", @title = "IsCustomLogotypeEnabled" })
                                        @Html.FormGroup(i => item.PdfGenObject.IsCustomLogotypeEnabled).Checkbox("Aktivera").Validate().Build()
                                    </div>
                                    <div class="value-section">
                                        <label class="value-label attr-item" for="colorInput1">Bakgrundsfärg</label>
                                        @Html.FormGroup(x => x.Colors.BackgroundColor, "text").TextBox(null, new { @id = "colorInput1", @class = "p-left", onchange = "colorPicker('picker1', this.id);"}).Validate().Build()
                                        <input name="colorpicker" id="picker1" type="color" value="@Model.Colors.BackgroundColor" onchange="colorPicker('colorInput1', this.id);">
                                        @Html.HiddenFor(x => x.Colors.BackgroundColor)
                                    </div>
                                    <div class="value-section">
                                        <label class="value-label attr-item" for="colorInput2">Teckensnittsfärg</label>
                                        @Html.FormGroup(x => x.Colors.FontColor, "text").TextBox(null, new { @id = "colorInput2", @class = "p-left", onchange = "colorPicker('picker2', this.id);" }).Validate().Build()
                                        <input name="colorpicker2" id="picker2" type="color" value="@Model.Colors.FontColor" onchange="colorPicker('colorInput2', this.id);">
                                        @Html.HiddenFor(x => x.Colors.FontColor)
                                    </div>
                                    <div class="value-section">
                                    <label class="value-label attr-item" for="colorInput3">Rubrikfärg</label>
                                        @Html.FormGroup(x => x.Colors.TableHeaderColor, "text").TextBox(null, new { @id = "colorInput3", @class = "p-left", onchange = "colorPicker('picker3', this.id);" }).Validate().Build()
                                        <input name="colorpicker3" id="picker3" type="color" value="@Model.Colors.TableHeaderColor" onchange="colorPicker('colorInput3', this.id);">
                                        @Html.HiddenFor(x => x.Colors.TableHeaderColor)
                                    </div>
                                    <div class="value-section">
                                        <label class="value-label attr-item" for="colorInput4">Kantlinjefärg</label>
                                        @Html.FormGroup(x => x.Colors.TableBorderColor, "text").TextBox(null, new { @id = "colorInput4", @class = "p-left", onchange = "colorPicker('picker4', this.id);" }).Validate().Build()
                                        <input name="colorpicker4" id="picker4" type="color" value="@Model.Colors.TableBorderColor" onchange="colorPicker('colorInput4', this.id);">
                                        @Html.HiddenFor(x => x.Colors.TableBorderColor)
                                    </div>
                                }
                          }
                      </div>
                  </li>
              }
          </ul>
      }
      else
      {
        <div class="note">
            <h2>Inga inställningar hittades.</h2>
        </div>
      }
    </div>
</div>