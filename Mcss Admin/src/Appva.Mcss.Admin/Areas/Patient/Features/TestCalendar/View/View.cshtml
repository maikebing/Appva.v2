@using Appva.Mcss.Admin.Application.Common
@using Appva.Html.Elements
@using Appva.Mcss.Admin.Areas.Patient.Features
@model Appva.Mcss.Admin.Models.ViewTestCalendarModel
@{ ViewBag.Title = "Kalender"; }
@Html.Partial("~/Areas/Patient/Features/Patient/Partials/_PatientDetails.cshtml", Model.Patient)
@Html.Partial("~/Features/Shared/_SubMenuPartial.cshtml", Model.Patient)
@section JavaScript {
    <script type="text/javascript" src="/Assets/js/mcss.calendar.lb.js"></script>
}
@functions 
{
    /// <summary>
    /// 
    /// </summary>
    /// <param name="value"></param>
    /// <returns></returns>
    public static string BackgroundColor(object value)
    {
        var hash = value.GetHashCode();
        return string.Format("{0:X2}{1:X2}{2:X2}", (hash & 0xFF0000) >> 16, (hash & 0x00FF00) >> 8, hash & 0x0000FF);
    }
    
    /// <summary>
    /// 
    /// </summary>
    /// <param name="value"></param>
    /// <returns></returns>
    public static string ForegroundColor(object value)
    {
        var color = BackgroundColor(value);
        var r     = Convert.ToInt32(color.Substring(0, 2), 16);
        var g     = Convert.ToInt32(color.Substring(2, 2), 16);
        var b     = Convert.ToInt32(color.Substring(4, 2), 16);
        var yiq   = ((r * 299) + (g * 587) + (b * 114)) / 1000;
        return yiq >= 128 ? "000000" : "ffffff";
    }
    
}
<div id="subheader" class="cf">
    <h1>Kalender för @Html.ActionLink(Model.Name, "Details", "Schedule", new { Id = Model.Patient.Id, ScheduleId = Model.ScheduleId }, new { })</h1>
</div>
<div id="content" class="cf">
    <div id="content-primary">
        <div class="cal-wrap cf">
            @(Html.Get<TestCalendarController>().Content(
                @<text>
                    <div class="h cal-h cf" style="margin-left:0;">
                        <h2>@Model.Current.ToString("MMMM yyyy").FirstToUpper()</h2>
                        @Html.Button(Model.Previous.ToString("MMMM").FirstToUpper() + " " + WebUtility.HtmlDecode("&larr;")).Type(ButtonType.Submit).Name("Date").Class("prev").Value(Model.Previous.ToString())
                        @Html.Button(Model.Next.ToString("MMMM").FirstToUpper()     + " " + WebUtility.HtmlDecode("&rarr;")).Type(ButtonType.Submit).Name("Date").Class("next").Value(Model.Next.ToString())
                    </div>
                </text>
            ))
            <div id="calendar" style="width:100%;">
                <table>
                    <thead>
                        <tr>
                            <td class="week-number"></td>
                            @foreach (var day in Appva.Domain.DayOfWeek.DaysOfWeek)
                            {
                                <th scope="col">@day.ToString().FirstToUpper()</th>
                            }
                        </tr>
                    </thead>
                </table>
                @foreach (var week in Model.Calendar)
                {
                    var tableHeight = (week.Days.Max(x => x.NumberOfEvents) * 40) + 25;
                    <div class="month-row" style="height:@(tableHeight > 100 ? tableHeight : 100)px">
                        <table class="bg-table">
                            <tr>
                                <td class="week-number">v @week.WeekNumber</td>
                                @foreach (var day in week.Days)
                                {
                                    <td class="date @(!day.IsWithinMonth ? "inactive" : "active") @(day.IsToday ? "today" : "")">@day.Date.Day</td>
                                }
                            </tr>
                        </table>
                        <table class="evt-grid">
                            @{
                                var date   = week.Days.First().Date;
                            }
                            @while (week.AllEvents.IsNotEmpty())
                            {
                                <tr>
                                    <td class="week-number">&nbsp;</td>
                                    @for (var i = 0; i < 7; )
                                    {
                                        var calendarEvent = week.AllEvents.Where(x => x.Start.Date.Equals(date.AddDays(i))).FirstOrDefault();
                                        if (calendarEvent == null)
                                        {
                                            <td></td>
                                            i++;
                                            continue;
                                        }
                                        var colspan = (calendarEvent.End.Date - date.AddDays(i)).Days + 1;
                                        var classes = string.Format(
                                            "act {0} {1} {2}",
                                            date.AddDays(i) > calendarEvent.Start.Date ? "c-from-last-week" : "",
                                            colspan > 7 - i ? "c-next-week" : "",
                                            calendarEvent.SequenceId);
                                        <td colspan="@(colspan > (7 - i) ? (7 - i) : colspan)">
                                            <a href="#">
                                                <span style="background-color:#@BackgroundColor(calendarEvent.SequenceId); color:#@ForegroundColor(calendarEvent.SequenceId)" class="@classes" id="@calendarEvent.SequenceId">
                                                    <span class="time">
                                                        <span class="start">
                                                            @calendarEvent.Start.ToShortTimeString()
                                                        </span>
                                                        <span class="end">
                                                            @calendarEvent.End.ToShortTimeString()
                                                        </span>
                                                    </span>
                                                    @calendarEvent.Name
                                                    <span class="act-info">
                                                        <strong>Från:</strong>
                                                        <span>
                                                            @calendarEvent.Start.ToShortDateString() kl. @calendarEvent.Start.ToShortTimeString()
                                                        </span>
                                                        <strong>Till:</strong>
                                                        <span>
                                                            @calendarEvent.End.ToShortDateString() kl. @calendarEvent.End.ToShortTimeString()
                                                        </span>
                                                        <strong>Anteckningar/instruktion:</strong>
                                                        <span>
                                                            @calendarEvent.Description
                                                        </span>
                                                        <strong>Upprepning:</strong>
                                                        <span>
                                                            @calendarEvent.Repeat.ToString().FirstToUpper()
                                                        </span>
                                                    </span>
                                                </span>
                                            </a>
                                        </td>
                                        week.AllEvents.Remove(calendarEvent);
                                        i = i + colspan;
                                    }
                                </tr>
                            }
                        </table>
                    </div> 
                }
            </div>
        </div>
    </div>
</div>