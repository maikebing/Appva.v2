@using Appva.Mcss.Admin.Application.Models
@model Appva.Mcss.Admin.Models.AddObservationValueModel

<div class="section section--hspace">
    <h2>Provtagning</h2>
    <div id="add-observation-value">
        @using (Html.BeginForm("addvalue", "observation", new { ObservationId = Model.ObservationId }, FormMethod.Post, new { @class = "validate", data_update_section_target = "update-table", novalidate = "novalidate" }))
            {
            <div class="width-limiter width-limiter--s">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary()

                <h3>@Model.Name</h3>
                <p>@Model.Instruction</p>

                <div class="form-controls">
                    @if (Model.ValueSelectList.IsNotNull())
                    {
                        @Html.DropDownListFor(x => x.Value, Model.ValueSelectList, new { required = "reguired" })
                    }
                    @if (Model.ValueSelectList.IsNull())
                    {
                        @Html.FormGroup(x => x.Value).Label("Kg", new { @class = "required-indicator" }).TextBox("###", new { min = "5", max = "450", size = "3", required = "required", type = "text" }).Validate().Build()
                    }
                    @Html.HiddenFor(x => x.Scale)
                    @Html.ValidationMessageFor(x => x.Value)
                </div>
                <div class="form-controls form-controls--align-end">
                    <button type="reset" class="button button--secondary" data-dialog-close="true">Avbryt</button>
                    <button type="submit" class="button button--primary">Spara och signera</button>
                </div>
            </div>
        }
    </div>
</div>