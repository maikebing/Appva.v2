@model CreateSequencePostRequest
@using Appva.Html.Elements
@using Appva.Mcss.Admin.Areas.Patient.Features
@helper NewFormHeader(string title, string description) {
    <div class="form-section-header">
        <div class="form-section-header__number"></div>
        <div class="form-section-header__text">
            <h2 class="form-section-header__heading">@title</h2>
            <div class="form-section-header__description">@description</div>
        </div>
    </div>
}
@Html.Partial("~/Areas/Patient/Features/Patient/Partials/_PatientDetails.cshtml", Model.Patient)
@Html.Partial("~/Features/Shared/_SubMenuPartial.cshtml", Model.Patient)
<div class="section section--hspace section--vspace section--bluetone">
    <h2>Lägg till insats</h2>
    @Html.ValidationSummary()
	<div>
        @(Html.Post<SequenceController>("Create").Autocomplete(false).Content(
            @<text>
            <div class="grid grid--flowing grid--align-top" data-columns="m:1 l:2">
                <div data-size="s:24">
                    <div class="section section--hspace section--vspace section--card">
                        @NewFormHeader("Om insatsen", "Beskriv insatsen och vilka som är behöriga att ge den.")
                        <div class="form-controls">
                            @Html.Text(x => x.Name).Label(Html.Label(x => x.Name, "Insats")).Placeholder("T.ex. dosett, insulin, smörjning").Autocomplete(false)
                        </div>
                        <div class="form-controls form-controls--text">
                            @Html.TextArea(x => x.Instruction).Label(Html.Label(x => x.Instruction, "Instruktion")).Columns(30).Rows(6).Autocomplete(false).DisableResize()
                        </div>
                        @if (Model.Delegations != null && Model.Delegations.Count() > 0)
                        {
                        <div class="form-controls form-controls--select form-controls--full-margin" id="required-delegation-container" data-toggle-by-input="disable">
                            @Html.LabelFor(x => x.DelegationId, "Kräver delegering för")
                            @Html.DropDownListFor(x => x.DelegationId, new SelectList(Model.Delegations, "Value", "Text", Model.DelegationId), "Välj delegering ...", new {  @class = "delegation" })
                        </div>
                        }
                        <div class="form-controls form-controls--checkbox">
                            @Html.Checkbox(x => x.IsRequiredRole, true).Label(Html.Label(x => x.IsRequiredRole, "Får endast ges av legitimerad" + " " + Model.RequiredRoleText), Position.After).Class("toggle-target").Data("toggle-targets", "[\"required-delegation-container\"]")
                        </div>
                    </div>
                </div>
                @if (Model.Inventories != null && Model.Inventories.Count() > 0)
                {
                <div data-size="s:24">
                    <div class="section section--hspace section--vspace section--card">
                        @NewFormHeader("Om insatsen", "Beskriv insatsen och vilka som är behöriga att ge den.")
                        <fieldset class="form-controls form-controls--inline-children inliner inliner--align-center toggle-target" data-toggle-targets='["create-new-inventory-panel", "choose-inventory-panel"]' aria-controls="@InventoryState.New @InventoryState.Use">
							<div class="form-controls form-controls--radio-tab">
                                @Html.Radio(x => x.InventoryType, InventoryState.New).Id("create-new-inventory").Label(Html.Label(x => x.InventoryType, "Skapa ny"), Position.After)
                            </div>
                            <div class="form-controls form-controls--radio-tab">
                                @Html.Radio(x => x.InventoryType, InventoryState.Use).Id("choose-inventory").Label(Html.Label(x => x.InventoryType, "Välj befintlig"), Position.After)
                            </div>
                        </fieldset>
                        <div id="create-new-inventory-panel" data-toggle-values="@InventoryState.New" data-toggle-by-input="show" class="section" style="display: none;"></div>
                        <div id="choose-inventory-panel"     data-toggle-values="@InventoryState.Use" data-toggle-by-input="show" class="section" style="display: none;">
                            <div class="form-controls form-controls--select form-controls--full-margin">
                                @Html.DropDownListFor(x => x.InventoryId, new SelectList(Model.Inventories, "Value", "Text", Model.InventoryId), "Välj förbrukningsjournal ...", new { @class = "inventories" })
                            </div>
                        </div>
                    </div>
                </div>
                }
                <div data-size="s:24">
                    <div class="section section--hspace section--vspace section--card">
                        @NewFormHeader("Insatsens start och slut", "Ange om insatsen ska ges vid behov eller under en viss tidsperiod.")
                        <fieldset class="form-controls form-controls--inline-children inliner inliner--align-center toggle-target" data-toggle-targets='["date-range", "repeating", "times", "choose-dates"]'>
							<div class="form-controls form-controls--radio-tab">
                                @Html.Radio(x => x.Type, SequenceType.Scheduled).Label(Html.Label(x => x.Type, "Stående"), Position.After)
							</div>
							<div class="form-controls form-controls--radio-tab">
                                @Html.Radio(x => x.Type, SequenceType.DateRange).Label(Html.Label(x => x.Type, "Specifika datum"), Position.After)
							</div>
							<div class="form-controls form-controls--radio-tab">
                                @Html.Radio(x => x.Type, SequenceType.NeedBased).Label(Html.Label(x => x.Type, "Vid behov"), Position.After)
							</div>
						</fieldset>
                        <div id="date-range" data-toggle-values="@SequenceType.DateRange" data-toggle-by-input="hide" class="section">
							<div class="grid grid--align-center">
								<div data-size="xs:24 s:10 m:8 l:10 xl:8">
                                    <div class="form-controls date-picker">
                                        @Html.Text(x => x.StartDate).Id("start-date").Label(Html.Label(x => x.StartDate, "Startdatum").Class("required-indicator")).Placeholder("ÅÅÅÅ-MM-DD").Class("datepicker").Data("date-picker-limit", "future").Data("rule-datelimit", "future").Data("rule-date", "true").Autocomplete(false)
									</div>
								</div>
								<div>
								    <svg class="icon icon--e icon--separator icon--separator-offset">
									    <use xlink:href="/assets/images/icons/icon.sprite.svg#arrow--fat-icon" />
								    </svg>
								</div>
								<div data-size="xs:24 s:10 m:8 l:10 xl:8">
									<div class="form-controls date-picker">
										<label for="idC9936FD6-AB04-4D72-907D-C66FC3CF657E">Slutdatum 
                                            <span class="tooltip" tabindex="0" aria-describedby="no-end-date">
											    <svg class="icon icon--round icon--info" aria-hidden="true">
												    <use xlink:href="/assets/images/icons/icon.sprite.svg#questionmark-icon" />
											    </svg>
											    <span id="no-end-date" class="tooltip__text">
												    Ska insatsen ske tills vidare, lämna fältet tomt
											    </span>
										    </span>
                                        </label>
                                        @(Html.Text(x => x.EndDate).Placeholder("Tills vidare")
                                            .Class("datepicker")
                                            .Data("date-picker-limit", "future")
                                            .Data("rule-datelimit", "future")
                                            .Data("rule-date", "true")
                                            .Data("rule-greaterthan", "#start-date")
                                            .Data("msg-greaterthan", "Slutdatum måste vara senare än startdatumet")
                                            .Aria("describedby", "no-end-date").Autocomplete(false))
									</div>
								</div>
							</div>
							<div class="form-controls form-controls--checkbox inliner inliner--align-center">
                                @Html.Checkbox(x => x.IsPeriodWithTimeOfDay, true).Label(Html.Label(x => x.IsPeriodWithTimeOfDay, "Ange klockslag för start och slut?"), Position.After).Class("toggle-target").Data("toggle-targets", "[\"exact-interval\"]")
							</div>
							<div id="exact-interval" data-toggle-by-input="show" class="section section--blue section--narrow section--bubble section--hspace section--vspace">
								<fieldset class="timepicker">
									<legend>Start:</legend>
                                    <div class="form-controls">
                                        @(Html.Number(x => x.StartHour)
                                              .Label(Html.Label(x => x.StartHour, "Timmar").Class("visually-hidden")) /* <b class="required-indicator">*</b> */
                                              .Data("direction", "vertical")
                                              .Max(23).Min(0).Size(2)
                                              .Required()
                                        )
                                    </div>
									<svg class="icon" aria-hidden="true">
										<use xlink:href="/assets/images/icons/icon.sprite.svg#colon-icon" />
									</svg>
                                    <div class="form-controls">
                                        @(Html.Number(x => x.StartMinute)
                                              .Label(Html.Label(x => x.StartMinute, "Minuter").Class("visually-hidden")) /* <b class="required-indicator">*</b> */
                                              .Data("direction", "vertical")
                                              .Max(59).Min(0).Step("1").Size(2)
                                              .Required()
                                        )
                                    </div>
								</fieldset>
								<fieldset class="timepicker">
									<legend>Slut:</legend>	
                                    <div class="form-controls">
                                        @(Html.Number(x => x.EndHour)
                                              .Label(Html.Label(x => x.EndHour, "Timmar").Class("visually-hidden")) /* <b class="required-indicator">*</b> */
                                              .Data("direction", "vertical")
                                              .Max(23).Min(0).Size(2)
                                              .Required()
                                        )
                                    </div>
									<svg class="icon" aria-hidden="true">
										<use xlink:href="/assets/images/icons/icon.sprite.svg#colon-icon" />
									</svg>
                                    <div class="form-controls">
                                        @(Html.Number(x => x.EndMinute)
                                              .Label(Html.Label(x => x.EndMinute, "Minuter").Class("visually-hidden")) /* <b class="required-indicator">*</b> */
                                              .Data("direction", "vertical")
                                              .Max(59).Min(0).Step("1").Size(2)
                                              .Required()
                                        )
                                    </div>
								</fieldset>
							</div>
						</div>
                        <div id="choose-dates" data-toggle-values="@SequenceType.DateRange" data-toggle-by-input="show" class="section">
                            <div class="grid grid--align-bottom">
	                            <div data-size="xs:24 s:10 m:8 l:12 xl:8">
		                            <div class="form-controls date-picker">
                                        <label for="AddNewDate">Datum att lägga till</label>
                                        <input id ="AddNewDate" 
                                               type="text" 
                                               class="datepicker" 
                                               data-datepicker-limit="future" 
                                               data-datepicker-selected-dates="[@string.Join(",", Model.Dates ?? new List<Appva.Domain.Date>())]"
                                               data-input-value-list="id-choose-date-value-list-panel"
                                               data-input-value-list-button="id-chosen-date-button"
                                               autocomplete="off" />
                                        @*(Html.Text(x => x.Dates)
                                              .Label(Html.Label(x => x.Dates, "Datum att lägga till"))
                                              .Class("datepicker")
                                              .Data("datepicker-limit", "future")
                                              .Data("datepicker-selected-dates", "["+ string.Join(",", Model.Dates) +"]") /* the array of selected dates, ['2025-01-01'] */
                                              .Data("input-value-list", "id-choose-date-value-list-panel")
                                              .Data("input-value-list-button", "id-chosen-date-button")
                                              .Autocomplete(false)
                                        )*@
                                        @Html.Hidden().Data("soft-post", "AddNewDate")
		                            </div>
	                            </div>
	                            <div data-size="xs:24 s:10 m:8 l:10 xl:8">
		                            <div class="form-controls">
                                        <button id="id-chosen-date-button" class="button" type="submit" data-soft-post="Dates">
				                            <svg class="icon icon--mr" aria-hidden="true">
                                                <use xlink:href="/assets/images/icons/icon.sprite.svg#plus-icon"></use>
                                            </svg>Lägg till
			                            </button>
		                            </div>
	                            </div>
                            </div>
                            <ul class="input-value-list" id="id-choose-date-value-list-panel"></ul>
						</div>
                    </div>
                </div>
                <div data-size="s:24">
					<div id="repeating" class="section section--hspace section--vspace section--card" data-toggle-values="@SequenceType.Scheduled" data-toggle-by-input="show">
						@NewFormHeader("Repetera", "Ange om insatsen ska upprepas med ett visst dags- eller veckointervall.")
						<fieldset class="form-controls form-controls--inline-children inliner inliner--align-center toggle-target" data-toggle-targets='["by-week", "by-day"]'>
							<div class="form-controls form-controls--radio-tab">
                                @Html.Radio(x => x.Repetition, Repetition.Daily).Label(Html.Label(x => x.Repetition, "Dagligen"), Position.After)
							</div>
							<div class="form-controls form-controls--radio-tab">
                                @Html.Radio(x => x.Repetition, Repetition.Weekly).Label(Html.Label(x => x.Repetition, "Veckovis"), Position.After)
							</div>
						</fieldset>
						<div id="by-day" data-toggle-values="@Repetition.Daily" data-toggle-by-input="show" class="flex flex flex--align-center flex--align-middle flex--margin-bottom">
							<span class="label" aria-hidden="true">Var</span>
							<div class="form-controls form-controls--no-margin">
                                @(Html.Number(x => x.EverydayFrequency)
                                      .Label(Html.Label(x => x.EverydayFrequency, "Dagligen").Class("visually-hidden"))
                                      .Data("direction", "vertical")
                                      .Aria("required", "true")
                                      .Aria("described-by", "every-day")
                                      .Required()
                                      .Min(1).Max(28)
                                      .Size(3))
							</div>
							<span class="label" aria-hidden="true">:e dag</span>
							<span class="tooltip" tabindex="0" aria-describedby="every-day">
									<svg class="icon icon--round icon--info" aria-hidden="true">
										<use xlink:href="/assets/images/icons/icon.sprite.svg#questionmark-icon" />
									</svg>
									<span id="every-day" class="tooltip__text">
										Ska en insats ske varje dag: Välj 1.
								</span>
							</span>
						</div>
						<div id="by-week" data-toggle-values="@Repetition.Weekly" data-toggle-by-input="show">
							<div class="flex flex flex--align-center flex--align-middle flex--margin-bottom">
								<span class="label" aria-hidden="true">Var</span>
								<div class="form-controls form-controls--no-margin">
                                    @(Html.Number(x => x.WeeklyFrequency)
                                          .Label(Html.Label(x => x.WeeklyFrequency, "Veckovis").Class("visually-hidden"))
                                          .Data("direction", "vertical")
                                          .Aria("required", "true")
                                          .Required()
                                          .Min(1)
                                          .Size(2))
								</div>
								<span class="label" aria-hidden="true">:e vecka</span>
								<span class="tooltip" tabindex="0">
									<svg class="icon icon--round icon--info" aria-hidden="true">
										<use xlink:href="/assets/images/icons/icon.sprite.svg#alert-icon" />
									</svg>
									<span id="tooltip2" class="tooltip__text">
										Ska en insats ske varje vecka: Välj 1.
									</span>
								</span>
							</div>		
                            <fieldset class="form-controls inliner inliner--align-center">
                                <legend class="checkbox-tab--legend">Välj veckodagar<span class="required-indicator">*</span></legend>
                                
                                @for (var i = 0; i < Model.DaysOfWeek.Count(); i++ )
                                {
                                    <div class="form-controls form-controls--checkbox-tab">
                                        @Html.Hidden().Name("DaysOfWeek[" + i + "].Code").Value(Model.DaysOfWeek[i].Code)
                                        @(Html.Checkbox(x => x.DaysOfWeek, true)
                                              .Name("DaysOfWeek[" + i + "].IsChecked")
                                              .Label(Html.Label(x => x.DaysOfWeek, Appva.Domain.DayOfWeek.DaysOfWeek[i].ToString()), Position.After))
                                    </div>
                                }
                            </fieldset>
						</div>
					</div>
				</div>
                <div data-size="s:24">
					<div id="times" data-toggle-values="@SequenceType.NeedBased" data-toggle-by-input="hide">
						<div class="section section--hspace section--vspace section--card">
                            @NewFormHeader("Ange klockslag för insatsen", "Ange vid vilka tider som insatsen ska utföras.")
							<fieldset class="form-controls form-controls--inline-children">
								<legend>Klockslag, dag</legend>
                                @for (var i = 0; i < 12; i++)
                                {
                                    <div class="form-controls form-controls--checkbox form-controls--checkbox-narrow">
                                        @Html.Hidden().Name("Times[" + i + "].Hour").Value(Model.Times[i].Hour.ToString())
                                        @(Html.Checkbox(x => x.DaysOfWeek, true)
                                                  .Name("Times[" + i + "].IsChecked")
                                                  .Label(Html.Label(x => x.DaysOfWeek, Model.Times[i].Hour.ToString("D2")), Position.After)
                                                  .Class("toggle-target")
                                                  .Data("toggle-targets", "[\"fine-tune-container-" + Model.Times[i].Hour + "\"]"))
                                    </div>
                                }
							</fieldset>
							<fieldset class="form-controls form-controls--inline-children">
								<legend>Klockslag, kväll och natt</legend>
                                @for (var i = 12; i < 24; i++)
                                {
                                    <div class="form-controls form-controls--checkbox form-controls--checkbox-narrow">
                                        @Html.Hidden().Name("Times[" + i + "].Hour").Value(Model.Times[i].Hour.ToString())
                                        @(Html.Checkbox(x => x.DaysOfWeek, true)
                                              .Name("Times[" + i + "].IsChecked")
                                              .Label(Html.Label(x => x.DaysOfWeek, Model.Times[i].Hour.ToString("D2")), Position.After)
                                              .Class("toggle-target")
                                              .Data("toggle-targets", "[\"fine-tune-container-" + Model.Times[i].Hour + "\"]"))
                                    </div>
                                }
							</fieldset>
							<div class="collapsable-section collapsed">
								<h2 class="collapsable-section-trigger">Finjustera tider</h2>
								<div class="collapsable-section-content" data-show-message-if-empty="Inga valda tider" data-show-message-if-empty-class="system-message system-message--warning">
									@for (var i = 0; i < Model.Times.Count; i++)
                                    {
                                        <div id="fine-tune-container-@Model.Times[i].Hour" class="form-controls inline-label-input">
                                        @(Html.Number(x => x.DaysOfWeek)
                                              .Value("0")
                                              .Id("fine-tune-container-" + Model.Times[i].Hour)
                                              .Name("Times[" + i + "].Minute")
                                              .Label(Html.Label(x => x.DaysOfWeek, Model.Times[i].Hour.ToString("D2")))
                                              .Min(0).Max(59).Size(2)
                                              .Data("direction", "vertical"))
                                        </div>
                                    }
								</div>
							</div>
						</div>
					</div>
				</div>
				<div data-size="s:24">
					<div class="section section--hspace section--vspace section--card">
                        @NewFormHeader("Ges inom", "Ange vilket tidsintervall som insatsen får utföras inom.")
						<fieldset>
							<div class="flex flex flex--align-middle flex--align-center flex--margin-bottom">
								<div class="flex flex flex--align-middle flex--margin-left">
									<span class="label" aria-hidden="true">Får ges</span>
										<div class="form-controls form-controls--no-margin">
                                            @(Html.Number(x => x.RangeInMinutesBefore)
                                                  .Label(Html.Label(x => x.RangeInMinutesBefore, "Minuter innan").Class("visually-hidden"))
                                                  .Data("direction", "vertical")
                                                  .Max(60).Min(0).Size(2))
										</div>
									<span class="label" aria-hidden="true">minuter innan</span>
								</div>
								<div>
									<svg class="icon icon--e icon--separator">
										<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/images/icons/icon.sprite.svg#arrow--fat-icon"></use>
									</svg>
								</div>
								<div class="flex flex flex--align-middle flex--margin-left">
									<span class="label" aria-hidden="true">och</span>
									<div class="form-controls form-controls--no-margin">
                                        @(Html.Number(x => x.RangeInMinutesAfter)
                                              .Label(Html.Label(x => x.RangeInMinutesAfter, "Minuter efter").Class("visually-hidden"))
                                              .Data("direction", "vertical")
                                              .Max(60).Min(0).Size(2))
									</div>
									<span class="label" aria-hidden="true">minuter efter</span>
								</div>
							</div>
						</fieldset>
					</div>
				</div>
				<div data-size="s:24">
					<div class="form-controls form-controls--align-end">
                        <a class="button button--secondary" href="@Url.Action("Details", "Schedule", new { Id = Model.PatientId, ScheduleId = Model.ScheduleId })">Avbryt</a>
                        @Html.Button("Spara").Type(ButtonType.Submit).Class("button button--primary")
					</div>
				</div>    
            </div>
            </text>
        ))
    </div>
</div>