@model Appva.Mcss.Web.ViewModels.DelegationViewModel
@{ SetTitle("Lägg till delegering"); }
<div class="std-panel std-form delegdialog lb-validate-form" data-valclass="DelegationCreate">
    @using (Html.BeginForm(new { id = Model.AccountId })) {
        <h3 class="section-title">Lägg till delegering</h3>
        <div class="row toggle-group cf">      
			<div class="radio col">
                @Html.RadioButtonFor(m => m.CreateNew, false, new { @id = "activity-type-1", @class = "toggle", @data_toggletarget = "toggle-target-1" })
				<label for="activity-type-1">Välj i listan</label>
			</div>
			<div class="radio col structural">
                @Html.RadioButtonFor(m => m.CreateNew, true, new { @id = "activity-type-2", @class = "toggle", @data_toggletarget = "toggle-target-2" })
				<label for="activity-type-2">Skapa ny</label>
			</div>
		</div>
        <div class="toggle-target toggle-target-1">
		    <div class="listgroup cf">
			    <ul class="catlist">
                    @{ var iterator = 1; }
                    @foreach (var delegationTemplate in Model.DelegationTemplate) {
				        <li><a class="@String.Format("cat{0}", iterator)" href="#">@delegationTemplate.Key.Name</a></li>
                        iterator++;
                    }
			    </ul>
                @{ 
                    var subiterator = 1;
                }
			    <ul class="deleglist">
                    @foreach (var delegationTemplate in Model.DelegationTemplate) {
                        foreach (var subDelegationTemplate in delegationTemplate.Value) {
                            <li class="@String.Format("cat{0}", subiterator)">
                                <label>
                                    @if (Model.DelegationsTaken.Contains(subDelegationTemplate.Id)) {
                                        <input type="checkbox" checked="checked" disabled="disabled" name="Delegations" value="@subDelegationTemplate.Id" />
                                    } else {
                                        <input type="checkbox" name="Delegations" value="@subDelegationTemplate.Id" /> 
                                    }
                                    @subDelegationTemplate.Name
                                </label>
                            </li>
                        }
                        subiterator++;
                    }
			    </ul>
                @Html.ValidationMessageFor(m => m.Delegations)
		        <input type="hidden" id="TestDelegations" name="TestDelegations" />
            </div>
	    </div>
        <div class="toggle-target toggle-target-2 structural">
            <div class="textarea big">
                @Html.TextAreaFor(m => m.Delegation, new { @rows = "10", @cols = "57" })
                @Html.ValidationMessageFor(m => m.Delegation)
		    </div>
            <div class="select catselect">
                @Html.LabelFor(m => m.DelegationType)
                @Html.DropDownListFor(
                    m => m.DelegationType,
                    new SelectList(Model.DelegationTypes, "Value", "Text", Model.DelegationType),
                     "Välj delegeringstyp ...",
                    new { }
                )
                @Html.ValidationMessageFor(m => m.DelegationType)
		    </div>
        </div>
        <div class="select multisel">
		    @Html.LabelFor(m => m.Patient)
            @Html.DropDownListFor(
                m => m.Patient,
                new SelectList(Model.PatientItems, "Value", "Text", Model.Patient),
                "Alla",
                new { }
            )
            @Html.ValidationMessageFor(m => m.Patients)
            <input type="hidden" id="TestPatients" name="TestPatients" />
	    </div>
	    <div class="dateinput">
            @Html.LabelFor(m => m.StartDate)
            @Html.EditorFor(m => m.StartDate)
            @Html.ValidationMessageFor(m => m.StartDate)
            @Html.LabelFor(m => m.EndDate)
            @Html.EditorFor(m => m.EndDate)
            @Html.ValidationMessageFor(m => m.EndDate)
		    <em class="hint">Max 1 år</em>
	    </div>
        <p class="info">Observera att delegeringen börjar gälla först efter aktivering.</p>
	    <div class="submit">
            @Html.AntiForgeryToken()
            @Html.Submit("Spara")
            @*Html.Cancel("Avbryt")*@
	    </div>
    }
</div>